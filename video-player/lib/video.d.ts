import { IVideoPlayer } from "../models/video";
declare class VideoPlayer {
    private video;
    private videoContainer;
    private controlsUI;
    private isPlay;
    private isFullScreen;
    private isVolume;
    private navigator;
    private volumeValue;
    private iconsFolder;
    private subtitles;
    private isSubtitles;
    private isSpeed;
    private isTrack;
    private ui?;
    private timeTrackOffset;
    private isMouseHover;
    private destroyObject;
    private tapedTwice;
    private browser;
    private name?;
    private timeStore;
    private timeStoreOffset;
    private mX;
    private mY;
    private utils;
    private dom_elements;
    private activeLang;
    private activeSpeed;
    constructor({ videoContainer, iconsFolder, volumeValue, subtitle, timeTrackOffset: timeTrackOffset, videoPlayerUI, storeTimeOffset }: IVideoPlayer);
    get videoElement(): HTMLVideoElement | null;
    get controls_elements(): {
        [key: string]: HTMLElement;
    };
    get controls(): HTMLElement;
    get isVideoPlay(): boolean;
    get btnPause(): HTMLElement;
    get btnPlay(): HTMLElement;
    get overlay(): {
        overlay_btn_play: HTMLDivElement;
        overlay_node: HTMLDialogElement;
    };
    private removeStoreTime;
    private getStoreTime;
    checkError: () => boolean;
    private _events;
    play: () => void;
    playTo: (time: number) => void;
    pause: () => void;
    stop: () => void;
    playerInit: (callback?: ((params?: unknown) => void) | undefined) => void;
    onDestroy: (callback?: ((params?: unknown) => void) | undefined) => void;
    private _onMouse;
    private _onChangeFullScreen;
    private _onChangePip;
    private _onEventKeywords;
    private _onChangeProgressVideo;
    private setStoreTime;
}
export default VideoPlayer;
